/* Global fixes for iPhone Chrome overscroll issues have been moved to globals.css */

/* iOS Safari viewport fixes */
@supports (-webkit-touch-callout: none) {
  .container {
    min-height: -webkit-fill-available;
  }
  
  .paginatedContent {
    /* Fix for iOS Safari text clipping */
    transform: translateZ(0);
    -webkit-transform: translateZ(0);
  }
}

/* Prevent text selection and zoom on iOS */
@media (max-width: 768px) {
  .paginatedContent {
    -webkit-user-select: none;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
    /* Allow vertical scrolling but prevent zoom on double tap */
    touch-action: pan-y;
  }
  
  /* Make text elements pass through touch events to parent for navigation */
  .paginatedContent p,
  .paginatedContent span,
  .paginatedContent div,
  .paginatedContent br {
    pointer-events: none;
  }
}

/* Mobile browser viewport fixes */
@media (max-width: 768px) {
  .container {
    /* Use minimum height instead of fixed height to allow expansion */
    min-height: 100dvh; /* Dynamic viewport height */
    min-height: 100vh; /* Fallback */
    /* Fix iPhone Chrome overscroll issues */
    overscroll-behavior: none;
    overscroll-behavior-y: none;
    /* Ensure background covers any overscroll */
    background: #111 !important;
    /* iOS Safari compatibility */
    min-height: -webkit-fill-available;
    /* Allow overflow when content is too large */
    overflow: visible;
  }
  
  .paginatedContent {
    /* Prevent text selection and improve touch behavior */
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
    /* Allow vertical scrolling but prevent zoom on double tap */
    touch-action: pan-y;
    /* Better hardware acceleration for all mobile browsers */
    will-change: transform;
    /* Allow vertical scrolling when content overflows */
    overflow-y: auto;
    overflow-x: hidden;
    /* Fix overscroll behavior */
    overscroll-behavior: contain;
  }
}

/* Fix for iPhone Chrome overscroll black background */
.container {
  /* Prevent overscroll bounce effect */
  overscroll-behavior: none;
  overscroll-behavior-y: none;
  /* Ensure background covers any overscroll */
  background: #111;
  /* Use minimum height instead of fixed height to allow expansion */
  min-height: 100vh;
  min-height: 100dvh; /* Dynamic viewport height */
  min-height: -webkit-fill-available; /* iOS Safari fallback */
  display: flex;
  flex-direction: column;
  padding: 1rem;
  /* Allow container to overflow when content is too large */
  overflow: visible;
  /* Remove fixed height constraint to allow expansion */
  /* height: 100vh; - REMOVED */
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding: 1rem;
  border-bottom: 1px solid #333;
  flex-wrap: wrap;
  gap: 1rem;
}

.headerLeft {
  display: flex;
  align-items: center;
  gap: 1.5rem;
  flex-wrap: wrap;
}

.bookInfo {
  display: flex;
  align-items: center;
  gap: 1.2rem;
  flex-wrap: wrap;
}

.miniCover {
  width: 40px;
  height: 60px;
  border-radius: 4px;
  object-fit: cover;
}

.bookDetails {
  display: flex;
  flex-direction: column;
  gap: 0.2rem;
}

.bookTitle {
  font-size: 1rem;
  font-weight: 500;
  color: #e6e6e6;
}

.bookReader {
  font-size: 0.85rem;
  color: #999;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.backButton {
  display: flex;
  align-items: center;
  gap: 0.6rem;
  padding: 0.7rem 1.2rem;
  background: #2a2a2a;
  color: #999;
  border: 1px solid #333;
  border-radius: 8px;
  font-size: 0.95rem;
  cursor: pointer;
  transition: all 0.2s;
}

.backButton:hover {
  background: #333;
  color: #fff;
  border-color: #444;
}

.themeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.7rem;
  background: #2a2a2a;
  color: #999;
  border: 1px solid #333;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s;
}

.themeButton:hover {
  background: #333;
  color: #fff;
  border-color: #444;
}

.contentWrapper {
  padding: 0;
  /* Make this flex and allow expansion */
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  /* Ensure it can expand when content is large */
  min-height: 0;
  /* Remove height constraints to allow expansion */
  height: auto;
}

.content {
  flex: 1;
  padding: 2rem;
  width: 100%;
  overflow-y: auto;
  transition: all 0.3s ease;
  /* Allow content to expand vertically */
  min-height: 0;
  /* Remove height constraints */
  height: auto;
}

.paginatedContent {
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  /* Use flex and allow expansion */
  flex: 1;
  min-height: 400px;
  /* Allow vertical scrolling when content overflows */
  overflow-y: auto;
  /* Allow horizontal overflow if needed */
  overflow-x: hidden;
  padding: 1.5rem;
  transition: background 0.3s ease, color 0.3s ease;
  display: flex;
  flex-direction: column;
  cursor: pointer;
  position: relative;
  border-left: 2px solid transparent;
  border-right: 2px solid transparent;
  transition: border-color 0.2s ease;
  box-sizing: border-box;
  /* Ensure content can expand vertically */
  max-height: none;
  /* Allow content to expand vertically */
  height: auto;
}

.paginatedContent > div {
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 2;
  /* Let content fill the available space */
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  /* Allow content to expand vertically */
  min-height: 100%;
  /* Remove height constraints and allow expansion */
  height: auto;
  flex: 1;
  /* Allow vertical overflow when needed */
  overflow-y: visible;
}

.paginatedContent p {
  margin-bottom: 1rem;
  line-height: 1.5;
}

.progressBarContainer {
  width: 100%;
  height: 4px;
  background: #e0e0e0;
  border-radius: 2px;
  margin-top: 1rem;
  overflow: hidden;
}

.progressBar {
  height: 100%;
  background: #ff8c00;
  transition: width 0.3s ease;
}

.paginationWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin: 1rem 0;
  position: relative;
  max-width: 950px;
  width: 100%;
  margin: 0 auto;
}

.pageNavButton {
  background: rgba(255, 140, 0, 0.2);
  border: none;
  color: #fff;
  cursor: pointer;
  padding: 1.2rem;
  border-radius: 12px;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 35%;
  transform: translateY(-50%);
  z-index: 10;
  height: 80px;
  width: 80px;
  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(2px);
}

.pageNavButton:first-child {
  left: -20px;
}

.pageNavButton:last-child {
  right: -20px;
}

.pageNavButton:hover:not(:disabled) {
  background: rgba(255, 140, 0, 0.4);
  transform: translateY(-50%) scale(1.05);
}

.pageNavButton:active:not(:disabled) {
  transform: translateY(-50%) scale(0.95);
}

.pageNavButton:disabled {
  opacity: 0.3;
  cursor: not-allowed;
}

.pageNavButton svg {
  font-size: 2.2rem;
}

/* Responsive styles */
@media (max-width: 768px) {
  .container {
    padding: 0.5rem;
    /* Chrome mobile viewport handling - use minimum height */
    min-height: 100dvh;
    min-height: 100vh;
    /* Ensure container is flex and takes full height */
    display: flex;
    flex-direction: column;
    /* Allow overflow when content is too large */
    overflow: visible;
  }

  .content {
    padding: 1rem;
    font-size: 1rem;
    line-height: 1.5;
  }

  .contentWrapper {
    padding: 0;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    min-height: 0;
    /* Remove height constraints to allow expansion */
    height: auto;
  }

  .paginatedContent {
    /* Let content take available space in the wrapper */
    flex: 1;
    min-height: 400px; /* Reasonable minimum */
    max-height: none; /* Remove max-height constraint */
    padding: 1.5rem;
    cursor: pointer;
    position: relative;
    border-left: 2px solid transparent;
    border-right: 2px solid transparent;
    transition: border-color 0.2s ease;
    /* Ensure text doesn't get cut off - allow vertical scrolling */
    overflow-y: auto;
    overflow-x: hidden;
    /* Better scrolling for Chrome mobile */
    overscroll-behavior: contain;
    /* Fix for content clipping in Chrome mobile */
    box-sizing: border-box;
    /* Allow content to expand vertically */
    height: auto;
  }

  /* Hide navigation arrows on mobile */
  .pageNavButton {
    display: none;
  }

  /* Add visual feedback for tap zones on mobile */
  .paginatedContent::before,
  .paginatedContent::after {
    content: '';
    position: absolute;
    top: 0;
    width: 50%;
    height: 100%;
    pointer-events: none;
    transition: background-color 0.2s ease;
    z-index: 1;
    opacity: 0;
  }

  .paginatedContent::before {
    left: 0;
    background: linear-gradient(to right, rgba(255, 140, 0, 0.05), transparent);
  }

  .paginatedContent::after {
    right: 0;
    background: linear-gradient(to left, rgba(255, 140, 0, 0.05), transparent);
  }

  /* Show tap zones on hover */
  .paginatedContent:hover::before,
  .paginatedContent:hover::after {
    opacity: 1;
  }

  .paginatedContent:hover {
    border-left-color: rgba(255, 140, 0, 0.2);
    border-right-color: rgba(255, 140, 0, 0.2);
  }

  /* Ensure content text is above tap zones */
  .paginatedContent > div {
    position: relative;
    z-index: 2;
    /* Let content fill the available space */
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    /* Allow content to expand vertically */
    min-height: 100%;
    /* Remove height constraints and allow expansion */
    height: auto;
    flex: 1;
    /* Allow vertical overflow when needed */
    overflow-y: visible;
  }

  /* Active state for tap zones */
  .paginatedContent:active::before {
    background-color: rgba(255, 140, 0, 0.15);
    opacity: 1;
  }

  .paginatedContent:active::after {
    background-color: rgba(255, 140, 0, 0.15);
    opacity: 1;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 0.3rem;
    /* Chrome mobile viewport for smaller screens - use minimum height */
    min-height: 100dvh;
    min-height: 100vh;
    /* Ensure proper flex layout */
    display: flex;
    flex-direction: column;
    /* Fix iPhone Chrome overscroll issues */
    overscroll-behavior: none;
    overscroll-behavior-y: none;
    /* Ensure background covers any overscroll */
    background: #111 !important;
    /* iOS Safari compatibility */
    min-height: -webkit-fill-available;
    /* Allow overflow when content is too large */
    overflow: visible;
  }

  .content {
    padding: 0.8rem;
    font-size: 0.95rem;
  }

  .contentWrapper {
    padding: 0;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    min-height: 0;
    /* Remove height constraints to allow expansion */
    height: auto;
  }

  .paginatedContent {
    /* Let content take available space with smaller minimum */
    flex: 1;
    min-height: 350px;
    max-height: none;
    padding: 1rem;
    /* Chrome mobile scrolling improvements */
    overflow-y: auto;
    overflow-x: hidden;
    overscroll-behavior: contain;
    box-sizing: border-box;
    /* Allow content to expand vertically */
    height: auto;
  }

  /* Hide navigation arrows on mobile */
  .pageNavButton {
    display: none;
  }
}

/* Remove all gradient-related styles */
.contentWrapper::before,
.contentWrapper::after {
  display: none;
}

/* Dark mode specific styles */
@media (prefers-color-scheme: dark) {
  .container {
    background: #111;
  }

  .content p {
    color: #e6e6e6;
  }

  .loadingMessage {
    color: #999;
  }

  .errorMessage {
    color: #ff6b6b;
  }

  .bookTitle {
    color: #fff;
  }

  .bookReader {
    color: #b3b3b3;
  }
}

/* Remove theme-specific background styles */
.lightTheme,
.darkTheme {
  background: none;
}

.lightTheme::before,
.lightTheme::after,
.darkTheme::before,
.darkTheme::after {
  display: none;
}

/* Media queries para dispositivos móviles */
@media (max-width: 768px) {
  .header {
    padding: 0.8rem;
    flex-direction: column;
    align-items: flex-start;
  }

  .headerLeft {
    width: 100%;
    justify-content: space-between;
  }

  .bookInfo {
    gap: 0.8rem;
  }

  .miniCover {
    width: 30px;
    height: 45px;
  }

  .bookTitle {
    font-size: 0.9rem;
  }

  .bookReader {
    font-size: 0.8rem;
  }

  .contentWrapper {
    padding: 0 0.5rem;
  }

  .content {
    padding: 1rem;
    font-size: 1rem;
    line-height: 1.6;
    height: calc(100vh - 150px);
  }

  .backButton,
  .themeButton {
    padding: 0.5rem 0.8rem;
    font-size: 0.9rem;
  }

  .progressBar {
    left: 0;
  }
}

@media (max-width: 480px) {
  .header {
    padding: 0.5rem;
    margin-bottom: 1rem;
  }

  .backButton,
  .themeButton {
    padding: 0.4rem 0.6rem;
    font-size: 0.85rem;
  }
}

/* Mostrar sidebar en pantallas grandes */
@media (min-width: 1200px) {
  .container {
    width: 100%;
    margin-left: 0;
  }

  .progressBar {
    left: 0;
  }
}

.loadingMessage,
.errorMessage {
  text-align: center;
  padding: 2rem;
  font-size: 1.1rem;
  color: #666;
}

.errorMessage {
  color: #dc3545;
}

/* Estilos para diferentes elementos de texto */
.content h1, 
.content h2, 
.content h3 {
  text-align: inherit;
  margin: 2rem auto;
  max-width: 65ch;
}

.content blockquote {
  font-style: italic;
  border-left: 3px solid #666;
  padding-left: 1rem;
  margin: 1.5rem auto;
  max-width: 65ch;
}

.content pre {
  font-family: monospace;
  white-space: pre-wrap;
  margin: 1.5rem auto;
  max-width: 65ch;
}

.progressBar {
  position: fixed;
  top: 0;
  left: 250px;
  right: 0;
  height: 3px;
  background: rgba(255, 255, 255, 0.1);
  z-index: 100;
}

.progressFill {
  height: 100%;
  background: #ff8c00;
  transition: width 0.2s ease;
}

.saveModal {
  padding: 1.5rem;
  text-align: center;
  width: 90%;
  max-width: 500px;
  margin: 0 auto;
}

.saveModal p {
  margin-bottom: 2rem;
  font-size: 1.1rem;
  color: #333;
  word-wrap: break-word;
}

.modalActions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

.primaryButton,
.secondaryButton {
  padding: 0.8rem 1.5rem;
  border-radius: 8px;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.2s;
  flex: 1;
  min-width: 120px;
  max-width: 200px;
}

.primaryButton {
  background: #ff8c00;
  color: white;
  border: none;
}

.primaryButton:hover {
  background: #e67e00;
}

.secondaryButton {
  background: #f5f5f5;
  color: #666;
  border: 1px solid #eee;
}

.secondaryButton:hover {
  background: #eee;
  color: #333;
}

/* Dark mode */
@media (prefers-color-scheme: dark) {
  .saveModal p {
    color: #e6e6e6;
  }

  .secondaryButton {
    background: #2a2a2a;
    color: #999;
    border-color: #333;
  }

  .secondaryButton:hover {
    background: #333;
    color: #fff;
    border-color: #444;
  }
}

/* Media queries para dispositivos móviles */
@media (max-width: 768px) {
  .saveModal {
    padding: 1rem;
    width: 95%;
  }

  .saveModal p {
    font-size: 1rem;
    margin-bottom: 1.5rem;
  }

  .modalActions {
    gap: 0.8rem;
  }

  .primaryButton,
  .secondaryButton {
    padding: 0.7rem 1.2rem;
    font-size: 0.95rem;
    min-width: 100px;
  }
}

@media (max-width: 480px) {
  .saveModal {
    padding: 0.8rem;
    width: 100%;
  }

  .saveModal p {
    font-size: 0.95rem;
    margin-bottom: 1.2rem;
  }

  .modalActions {
    flex-direction: column;
    gap: 0.5rem;
  }

  .primaryButton,
  .secondaryButton {
    width: 100%;
    max-width: none;
    padding: 0.6rem 1rem;
    font-size: 0.9rem;
  }
}

.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  color: #e6e6e6;
}

.spinner {
  width: 50px;
  height: 50px;
  border: 5px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top-color: #ff8c00;
  animation: spin 1s ease-in-out infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Modal button styling */
.cancelButton {
  padding: 0.8rem 1.5rem;
  border-radius: 8px;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.2s;
  background: #f5f5f5;
  color: #666;
  border: 1px solid #eee;
}

.cancelButton:hover {
  background: #eee;
  color: #333;
  border-color: #ddd;
}

/* Mobile navigation hint styles */
.mobileHint {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  pointer-events: none;
}

.hintContent {
  display: flex;
  justify-content: space-between;
  width: 100%;
  padding: 0 2rem;
  color: white;
  font-size: 0.9rem;
}

.hintLeft,
.hintRight {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: rgba(255, 140, 0, 0.9);
  padding: 0.8rem 1.2rem;
  border-radius: 8px;
  backdrop-filter: blur(4px);
}

.hintLeft {
  flex-direction: row;
}

.hintRight {
  flex-direction: row-reverse;
}

/* Page counter styles */
.pageCounter {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.8rem;
  padding: 1rem 2rem;
  color: #e6e6e6;
  font-size: 0.9rem;
}

.pageCounterText {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.3rem;
}

.pageInfo {
  font-weight: 500;
  font-size: 0.95rem;
}

.percentageInfo {
  font-size: 0.8rem;
  color: #ff8c00;
  font-weight: 600;
}

/* Hide page counter on desktop (where nav buttons are visible) */
@media (min-width: 769px) {
  .pageCounter {
    display: none;
  }
}

@media (max-width: 480px) {
  .hintContent {
    padding: 0 1rem;
    font-size: 0.8rem;
  }
  
  .hintLeft,
  .hintRight {
    padding: 0.6rem 1rem;
    gap: 0.3rem;
  }
}

/* Progress indicator in header */
.progressIndicator {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin: 0 1.5rem;
  min-width: 200px;
}

.progressText {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.9rem;
  color: #e6e6e6;
}

.progressPercentage {
  font-weight: 600;
  font-size: 1rem;
  color: #ff8c00;
}

.progressPages {
  font-size: 0.85rem;
  color: #999;
}

.progressBarHeader {
  width: 100%;
  height: 4px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
  overflow: hidden;
}

.progressFillHeader {
  height: 100%;
  background: linear-gradient(90deg, #ff8c00, #ffb74d);
  border-radius: 2px;
  transition: width 0.3s ease;
}

/* Responsive adjustments for progress indicator */
@media (max-width: 768px) {
  .progressIndicator {
    display: none; /* Hide in header on mobile since we have the bottom indicator */
  }
}

@media (max-width: 480px) {
  .progressIndicator {
    display: none;
  }
}